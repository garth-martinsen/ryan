# file asyncio_cfg.py
steps_per_channel=[[],[],[]]
steps_per_channel[0] = [3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5]
steps_per_channel[1]=[6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0]
steps_per_channel[2] =[9.0, 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10.0, 10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9, 11.0, 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12.0, 12.1, 12.2, 12.3, 12.4, 12.5, 12.6, 12.7, 12.8, 12.9, 13.0, 13.1, 13.2, 13.3, 13.4, 13.5]

# below are fake data sets for this ayncio exercise... They are used as measurements and as Calibs
measurement=[{},{},{}]
measurement[0] ={"cfg_id": 1, "type": 'm', "timestamp":'2025-8-9  20:29:1', "a2d":27594.84,
                             "a2d_sd":1.249841, "vm":3.448513, "vb": 3.785102,
                             "keep": '[27585, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                              27595, 27595, 27595, 27595]',
                             "sample_period": 0.015625, "store_time": 0.000448,  "gate_time": 1.00018 }

measurement[1] ={"cfg_id": 2, "type": 'm', "timestamp": '2025-8-9  20:29:1' , "a2d": 27594.84, "a2d_sd":1.249841, "vm":3.448513, "vb": 6.785102,
                "keep" : '[27585, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595]',
                "sample_period": 0.015625, "store_time":0.000448, "gate_time": 1.00018}


measurement[2] ={"cfg_id": 2, "type": 'm', "timestamp": '2025-8-9  20:29:1' , "a2d": 27594.84,
                "a2d_sd":1.249841, "vm":3.448513, "vb": 9.785102,
                "keep" : '[27585, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, 27595, \
                27595, 27595, 27595, 27595, 27595]',
                "sample_period": 0.015625, "store_time":0.000448, "gate_time": 1.00018}